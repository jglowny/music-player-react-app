{"version":3,"sources":["AudioControls.js","Songs.js","Cover.js","Heading.js","App.js","index.js"],"names":["AudioControls","_ref","_ref$showControls","showControls","song","prevSong","nextSong","prevDisabled","nextDisabled","audioUrl","audioRef","useRef","_jsxs","_Fragment","children","_jsx","ref","controls","src","className","onClick","current","play","pause","Songs","songs","selectSong","style","textAlign","map","_ref2","title","artist","handleClick","Cover","image","alt","Heading","App","_useState","useState","_useState2","_slicedToArray","setSong","useEffect","fetch","then","response","ok","json","_useState3","_useState4","currentSongIndex","setCurrentSongIndex","currentSong","_useState5","_useState6","setPrevDisabled","_useState7","_useState8","setNextDisabled","length","coverUrl","prev","audioSrc","findSong","findIndex","el","rootElement","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5ecd15c7.chunk.js","sourcesContent":["import { useRef } from \"react\";\r\n\r\nexport const AudioControls = ({\r\n  showControls = true,\r\n  song,\r\n  prevSong,\r\n  nextSong,\r\n  prevDisabled,\r\n  nextDisabled\r\n}) => {\r\n  const { audioUrl } = song;\r\n  const audioRef = useRef();\r\n  return (\r\n    <>\r\n      <audio key={audioUrl} ref={audioRef} controls={showControls}>\r\n        <source src={audioUrl} />\r\n      </audio>\r\n\r\n      <div className=\"control-box\">\r\n        <button\r\n          onClick={() => prevSong()}\r\n          className={!prevDisabled ? \"\" : \"disabled\"}\r\n        >\r\n          &lt;&lt;\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => nextSong()}\r\n          className={!nextDisabled ? \"\" : \"disabled\"}\r\n        >\r\n          &gt;&gt;\r\n        </button>\r\n\r\n        <button onClick={() => audioRef.current.play()}>Play</button>\r\n        <button onClick={() => audioRef.current.pause()}>Pause</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","export const Songs = ({ songs, selectSong, current }) => {\r\n  const handleClick = (audioUrl) => {\r\n    selectSong(audioUrl);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      <h1 style={{ textAlign: \"center\" }}>Songs</h1>\r\n      {songs.map(({ title, artist, audioUrl }) => (\r\n        <li\r\n          key={audioUrl}\r\n          onClick={() => handleClick(audioUrl)}\r\n          className={current === audioUrl ? \"active\" : null}\r\n        >\r\n          <p className=\"title\">Title: {title}</p>\r\n          <p className=\"artist\">Artist: {artist}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","export const Cover = ({ image }) => {\r\n  return <img src={image} alt=\"cover\" />;\r\n};\r\n","export const Heading = ({ className }) => {\r\n  const text = \"Music Player\";\r\n  return <h1 className={className}>{text}</h1>;\r\n};\r\n","import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\nimport { AudioControls } from \"./AudioControls\";\nimport { Songs } from \"./Songs\";\nimport { Cover } from \"./Cover\";\nimport { Heading } from \"./Heading\";\n\nexport default function App() {\n  const URL = \"https://examples.devmastery.pl/songs-api/songs\";\n  const [songs, setSong] = useState([]);\n\n  useEffect(() => {\n    fetch(URL).then((response) => {\n      if (response.ok) {\n        response.json().then(setSong);\n      }\n    });\n  }, []);\n\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  // const [currentSong, setCurrentSong] = useState(songs[currentSongIndex]);\n  const currentSong = songs[currentSongIndex];\n  const [prevDisabled, setPrevDisabled] = useState(true);\n  const [nextDisabled, setNextDisabled] = useState(false);\n\n  const selectSong = (audioSrc) => {\n    const findSong = songs.findIndex((el) => el.audioUrl === audioSrc);\n    if (findSong > -1) {\n      setCurrentSongIndex(findSong);\n    }\n  };\n\n  useEffect(() => {\n    if (currentSongIndex === 0) {\n      return setPrevDisabled(true);\n    }\n    if (!songs[currentSongIndex + 1]) {\n      return setNextDisabled(true);\n    }\n    setPrevDisabled(false);\n    setNextDisabled(false);\n  }, [songs, currentSongIndex]);\n\n  const nextSong = () => {\n    if (songs[currentSongIndex + 1]) {\n      setCurrentSongIndex((prev) => prev + 1);\n    }\n  };\n\n  const prevSong = () => {\n    if (songs[currentSongIndex - 1]) {\n      setCurrentSongIndex((prev) => prev - 1);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Heading className=\"heading\" />\n      {songs.length === 0 ? (\n        <p>Loading</p>\n      ) : (\n        <>\n          <section className=\"song-player\">\n            <Cover className=\"cover\" image={currentSong?.coverUrl} />\n            <AudioControls\n              className=\"audio-controls\"\n              song={currentSong}\n              prevSong={prevSong}\n              nextSong={nextSong}\n              prevDisabled={prevDisabled}\n              nextDisabled={nextDisabled}\n            />\n          </section>\n          <section className=\"songs\">\n            <Songs\n              selectSong={selectSong}\n              songs={songs}\n              current={currentSong?.audioUrl}\n            />\n          </section>\n        </>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n\n  apiKey: process.env.REACT_APP_apiKey,\n\n  authDomain: \"my-project-1485266254230.firebaseapp.com\",\n\n  projectId: \"my-project-1485266254230\",\n\n  storageBucket: \"my-project-1485266254230.appspot.com\",\n\n  messagingSenderId: \"353478574256\",\n\n  appId: \"1:353478574256:web:3a577a406b16b4b1e33b75\"\n\n};\n\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}